{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","visibleGoods","useState","NONE","sortType","setSortType","isReversed","setIsReversed","sort","a","b","LENGTH","length","ALPHABET","localeCompare","reverse","className","type","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAiBKA,E,kDAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAME,IAAME,EAAgB,WAC3B,IAAMC,EAAY,UAAOF,GACzB,EAAgCG,mBAASJ,EAASK,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAoCH,oBAAS,GAA7C,mBAAOI,EAAP,KAAmBC,EAAnB,KAmBA,OAjBAN,EAAaO,MAAK,SAACC,EAAGC,GACpB,OAAQN,GACN,KAAKN,EAASa,OACZ,OAAOF,EAAEG,OAASF,EAAEE,OAEtB,KAAKd,EAASe,SACZ,OAAOJ,EAAEK,cAAcJ,GAEzB,QACE,OAAO,MAITJ,GACFL,EAAac,UAIb,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAS,yBAAoBZ,IAAaN,EAASe,SAAW,WAAa,IAC3EK,QAAS,kBAAMb,EAAYP,EAASe,WAHtC,iCAQA,wBACEI,KAAK,SACLD,UAAS,4BAAuBZ,IAAaN,EAASa,OAAS,WAAa,IAC5EO,QAAS,kBAAMb,EAAYP,EAASa,SAHtC,4BAQA,wBACEM,KAAK,SACLD,UAAS,6BAAsC,IAAfV,EAAuB,WAAa,IACpEY,QAAS,kBAAMX,GAAeD,IAHhC,qBASGL,EAAa,KAAOF,EAAgB,IACnC,wBACEkB,KAAK,SACLD,UAAU,4BACVE,QAAS,WACPb,EAAYP,EAASK,MACrBI,GAAc,IALlB,sBAcN,6BACE,6BAEIN,EAAakB,KAAI,SAACC,GAAD,OACf,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,cCzFtCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.9c5a9f72.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\nexport const App: React.FC = () => {\n  const visibleGoods = [...goodsFromServer];\n  const [sortType, setSortType] = useState(SortType.NONE);\n  const [isReversed, setIsReversed] = useState(false);\n\n  visibleGoods.sort((a, b): SortType => {\n    switch (sortType) {\n      case SortType.LENGTH:\n        return a.length - b.length;\n\n      case SortType.ALPHABET:\n        return a.localeCompare(b);\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={`button is-info ${sortType !== SortType.ALPHABET ? 'is-light' : ''}`}\n          onClick={() => setSortType(SortType.ALPHABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-success ${sortType !== SortType.LENGTH ? 'is-light' : ''}`}\n          onClick={() => setSortType(SortType.LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-warning ${isReversed === false ? 'is-light' : ''}`}\n          onClick={() => setIsReversed(!isReversed)}\n        >\n          Reverse\n        </button>\n\n        {\n          (visibleGoods[0] !== goodsFromServer[0]) && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={() => {\n                setSortType(SortType.NONE);\n                setIsReversed(false);\n              }}\n            >\n              Reset\n            </button>\n          )\n        }\n      </div>\n\n      <ul>\n        <ul>\n          {\n            visibleGoods.map((good) => (\n              <li data-cy=\"Good\" key={good}>\n                {good}\n              </li>\n            ))\n          }\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}